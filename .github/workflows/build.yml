name: build-windows-exe

on:
  push:
    tags: ["v*.*.*", "V*.*.*"]   # handles both v1.2.3 and V1.2.3
  workflow_dispatch: {}

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write            # <-- required for release upload
    defaults:
      run:
        shell: bash -l {0}       # load conda init

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Miniforge (Conda)
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Miniforge3
          channels: conda-forge
          channel-priority: strict
          conda-remove-defaults: true
          environment-file: environment.yml
          activate-environment: estimator-build
          use-mamba: true
          auto-activate-base: false

      - name: Sanity (no activation)
        shell: bash
        run: |
          "$CONDA/condabin/conda.bat" run -n estimator-build python -V
          "$CONDA/condabin/conda.bat" run -n estimator-build python -c "import tkinter, matplotlib; print('deps OK')"
          "$CONDA/condabin/conda.bat" run -n estimator-build pyinstaller --version

      - name: Build EXE (no activation)
        shell: bash
        run: |
          cat > run_estimator.py <<'PY'
          from estimator529 import main
          if __name__ == '__main__':
              import multiprocessing
              multiprocessing.freeze_support()
              main()
          PY

          "$CONDA/condabin/conda.bat" run -n estimator-build pyinstaller --onefile --windowed \
            --name 529Estimator \
            --collect-all matplotlib \
            --hidden-import tkinter.filedialog \
            --hidden-import tkinter.colorchooser \
            --hidden-import tkinter.messagebox \
            --hidden-import tkinter.scrolledtext \
            -p src run_estimator.py

      - name: Package zip
        shell: pwsh
        run: |
          Compress-Archive -Path dist\529Estimator.exe `
            -DestinationPath dist\529Estimator-windows.zip -Force

      - name: Verify outputs exist
        run: |
          test -f dist/529Estimator.exe || (echo "Missing dist/529Estimator.exe" && exit 1)
          test -f dist/529Estimator-windows.zip || (echo "Missing dist/529Estimator-windows.zip" && exit 1)

      - name: Generate checksums
        shell: pwsh
        run: |
          Get-FileHash dist\529Estimator.exe -Algorithm SHA256 | ForEach-Object { $_.Hash } > dist\529Estimator.exe.sha256
          Get-FileHash dist\529Estimator-windows.zip -Algorithm SHA256 | ForEach-Object { $_.Hash } > dist\529Estimator-windows.zip.sha256

      - name: Sanity list
        run: ls -la dist

      - name: Publish Release with Assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/529Estimator.exe
            dist/529Estimator-windows.zip
            dist/529Estimator.exe.sha256
            dist/529Estimator-windows.zip.sha256
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

